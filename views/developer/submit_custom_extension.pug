extends ../layouts/layout

block content
  section#intro.text-intro.no-padding-bottom
    .container
      .row
        .col-md-12
          h3.heading !{__('Soumettre une <span>extension personnalisée</span>')}

  section.section-gray.mini-section
    .container.clearfix
      .row

        div.alert.alert-info #{__('En soumettant votre extension (thème/plugin) celle-ci sera vérifiée et un fichier de sécurité sera généré et vous sera envoyé par email pour vous permettre d\'utiliser votre extension en production (sur une licence basique).')}

        .col-md-12

          h4 #{__('Nouvelle extension')}

          form(method="post", action="/developer/custom", data-ajax, data-custom-callback="afterForm")
            .form-group
              label #{__("Slug")}
              input.form-control(type='text', name='slug', placeholder=__('Le slug de votre plugin (le nom de son dossier)'))

            .form-group
              label #{__("Type")}
              select.form-control(name='type')
                option(value='PLUGIN') #{__('Plugin')}
                option(value='THEME') #{__('Thème')}

            .form-group
              label #{__('Fichiers du plugin/thème')}
              input.filestyle(type="file", name="files", data-icon="true", accept=".zip", data-buttonText=__("Choisir les fichiers"), data-iconName="fa fa-download", data-buttonName="btn-outline-success", data-placeholder=__('Choississez un fichier...'))
              small.form-text.text-muted #{__('Vous devez envoyer une archive zip contenant le dossier du plugin.')}

            .form-group.text-center
              button.btn.btn-success(type='submit')
                span.fa.fa-check
                | &nbsp;#{__('Soumettre mon extension')}

            hr

          .col-md-12

            h4 #{__('Mes extensions soumises')}

            div.table-responsive
              table.table
                thead
                  tr
                    th #{__("Type")}
                    th #{__('Slug')}
                    th #{__('Statut')}
                    th #{__("Date")}
                    th #{__('Actions')}
                tbody
                  each extension in extensions
                    tr
                      td
                        if extension.type === 'PLUGIN'
                          span.tag.tag-primary #{__('Plugin')}
                        else
                          span.tag.tag-primary #{__('Thème')}
                      td #{extension.slug}
                      td
                        if extension.state === 'PENDING'
                          span.tag.tag-info #{__('En attente...')}
                        else if extension.state === 'SUCCESS'
                          span.tag.tag-success #{__('Validée')}
                        else
                          span.tag.tag-danger #{__('Invalide')}
                      td.moment-date(data-format=__('Le {L} à {LT}')) #{extension.createdAt}
                      td
                        if extension.state === 'SUCCESS'
                          a.btn.btn-success(href='/developer/custom/download/' + extension.id) #{__('Télécharger le fichier de sécurité')}

block custom
  script(type='text/javascript', src='/js/bootstrap-filestyle.min.js')
  script(type='text/javascript').
    function afterForm(req, res)
    {
      var tr = '<tr>' +
                 '<td>' + (res.data.extension.type === 'PLUGIN' ? '<span class="tag tag-primary">#{__('Plugin')}</span>' : '<span class="tag tag-primary">#{__('Thème')}</span>') + '</td>' +
                 '<td>' + res.data.extension.slug + '</td>' +
                 '<td><span class="tag tag-info">#{__('En attente...')}</span></td>' +
                 '<td>#{__('Il y a quelques instants')}</td>' +
                 '<td></td>'

      $('table tbody').append(tr)
    }
