extends ../layouts/layout

block content
  section.section-gray.mini-section
    .container.clearfix
      div.row
        div.col-md-12

          form(method="post", action=add ? "/developer/add/plugin" : "/developer/edit/plugin/" + plugin.id, data-ajax, data-redirect-url="/developer", data-custom-data-formatter="parser")

            div.row
              div.col-md-6
                .form-group
                  label #{__('Nom du plugin')}
                  input.form-control(type='text', name="name", value=plugin.name, maxlength="20")
                  small.form-text.text-muted #{__('Ce nom sera affiché sur le market et sur le panel admin des CMS.')}
              div.col-md-6
                .form-group
                  label #{__('Slug du plugin')}
                  input.form-control.disabled(value=plugin.slug, disabled)
                  small.form-text.text-muted #{__('Ce slug est utilisé pour identifié votre plugin.')}

            div.row
              div.col-md-6
                .form-group
                  label #{__('Prix du plugin')}
                  div.input-group
                    input.form-control(type='number', step='0.01', name="price", value=plugin.price)
                    span.input-group-addon €
                  small.form-text.text-muted #{__("Si votre plugin est payant, les utilisateurs pourront payer par PayPal et l'argent sera directement versé sur votre compte PayPal.")}
              div.col-md-6
                .form-group
                  label #{__('Version du plugin')}
                  input.form-control.disabled(value=plugin.version, disabled)
                  small.form-text.text-muted #{__('Pour modifier cette valeur, vous devez ajouter une version depuis le dashboard développeur.')}
            div.row
              div.col-md-12
                .form-group
                  label #{__("URL de l'image d'illustration du plugin")}
                  input.form-control(type='text', name="img", value=plugin.img, placeholder="http://domain.tld/image.png")
                  small.form-text.text-muted #{__("Une image d'illustration est obligatoire, elle sera affiché sur le market.")}

            div.row
              div.col-md-12
                .form-group
                  label #{__("Description du plugin")}
                  textarea.form-control(name="description", rows="10") #{plugin.description}
                  small.form-text.text-muted #{__("Soyez le plus précis possible pour donner envie aux utilisateurs de télécharger votre plugin.")}

            unless add
              hr
              h4.text-center !{__('Historique des <span class="accent">versions</span>')}

              div.text-center
                button.btn.btn-outline-primary(type="button", data-toggle="collapse", data-target="#changelog") #{__('Afficher le changelog et le modifier')}

              div.collapse#changelog(style="margin-top:30px;")
                div.row
                  - var i = 0
                  each version in plugin.versions
                    if version.public
                      div.col-md-6.version
                        input(type='hidden', value=version.version, name="versions.version")
                        .card.text-xs-center
                          .card-header
                            h4.card-title v#{version.version}
                          .card-block
                            div.card-text

                              - var i2 = 0
                              each changelog in version.changelog['fr_FR']
                                div.input-group(data-i=i, data-i2=i2)
                                  span.input-group-addon &nbsp;-&nbsp;
                                  input.form-control(type='text', name="versions.changelog", value=changelog)
                                  span.input-group-btn
                                    button.btn.btn-danger.removeChangelog(type="button", data-i=i, data-i2=i2)
                                      span.fa.fa-times
                                - i2++
                              button.btn.btn-success.btn-block.addChangelog(type="button", data-i=i, data-i2=i2) #{__('Ajouter un changement')}

                          .card-footer.text-muted #{__('Publié')}&nbsp;
                            span.moment-date(fromNow) #{new Date(version.releaseDate)}
                      - i++

            if add

              hr

              div.row
                div.col-md-12
                  .form-group
                    label #{__('Fichiers du plugin')}
                    input.filestyle(type="file", name="files", data-icon="true", accept=".zip", data-buttonText=__("Choisir les fichiers"), data-iconName="fa fa-download", data-buttonName="btn-outline-success", data-placeholder=__('Choississez un fichier...'))
                    small.form-text.text-muted #{__('Vous devez envoyer une archive zip contenant le dossier du plugin.')}


            hr

            p.pull-left
              |  En soumettant ces informations vous devez respecter le
              a(href='/developer/cgu')  règlement
              | .
            button.btn.btn-success.btn-lg.pull-right(type="submit")
              if add
                span.fa.fa-upload
                | &nbsp;#{__('Soumettre le plugin')}
              else
                span.fa.fa-pencil-square-o
                | &nbsp;#{__('Soumettre les modifications du plugin')}

            unless add

              div.clearfix

              hr

              div.text-center
                a.btn.btn-outline-danger.btn-lg(href="/developer/delete/plugin/" + plugin.id)
                  span.fa.fa-ban
                  | &nbsp;#{__('Supprimer définitivement le plugin')}

block custom
  script(type='text/javascript', src='/js/summernote/summernote.min.js')
  script(type='text/javascript', src='/js/bootstrap-filestyle.min.js')
  script(type='text/javascript', src='/js/bootstrap-filestyle.min.js')
  script(type='text/javascript').

    $('textarea').summernote({height: 200})

    function parser(form)
    {
      var json = {};
      // Global
      json.name = form.find('input[name="name"]').val()
      json.price = form.find('input[name="price"]').val()
      json.img = form.find('input[name="img"]').val()
      json.description = form.find('textarea[name="description"]').val()
      // Versions
      json.versions = $('.version').map(function () {
        return {
          version: $(this).find('[name="versions.version"]').val(),
          changelog: $(this).find('[name="versions.changelog"]').map(function () {
            return $(this).val()
          }).get()
        }
      }).get()
      json = JSON.stringify(json);
      var data = new FormData();
      data.append('data', json);
      if (form.find('input[name="files"]').length > 1)
        data.append('files', form.find('input[name="files"]')[1].files[0]);
      return data;
    }

    $('.addChangelog').on('click', function (e) {

      e.preventDefault()

      var btn = $(this)
      var i = btn.attr('data-i')
      var i2 = btn.attr('data-i2')

      $('<div class="input-group" data-i="'+i+'" data-i2="'+i2+'"><span class="input-group-addon">&nbsp;-&nbsp;</span><input class="form-control" type="text" name="versions.changelog"><span class="input-group-btn"><button class="btn btn-danger removeChangelog" data-i="'+i+'" data-i2="'+i2+'"><span class="fa fa-times"></span></button></span></div>').insertBefore(btn)
      initChangelogRemoveEntry()

    })

    function initChangelogRemoveEntry () {

      $('.removeChangelog').unbind('click')
      $('.removeChangelog').on('click', function (e) {

        e.preventDefault()

        var btn = $(this)
        var i = btn.attr('data-i')
        var i2 = btn.attr('data-i2')

        $('div.input-group[data-i="'+i+'"][data-i2="'+i2+'"]').slideUp(150, function () {
          $(this).remove()
        })

      })

    }
    initChangelogRemoveEntry()

block customCss
  link(rel='stylesheet', href='/styles/summernote.css')
  style.
    .input-group-btn .btn {
      padding: 7px 12px;
    }
